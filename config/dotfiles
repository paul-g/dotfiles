# --- Configs ---
# append history on session close
shopt -s histappend
# save multi line commands as one command
shopt -s cmdhist

HISTFILESIZE=1000000
HISTSIZE=1000000

# ignore commands that start with a space and duplicates
HISTCONTROL=ignoreboth

# ignore the following commands from history
HISTIGNORE='ls:bg:fg:history'

# Store each history line as it is issued to prevent lost history in case of a
# crashed session
PROMPT_COMMAND='history -a'

# Prompt
BGREEN='\[\033[1;32m\]'
GREEN='\[\033[0;32m\]'
BRED='\[\033[1;31m\]'
RED='\[\033[0;31m\]'
BBLUE='\[\033[1;34m\]'
BLUE='\[\033[0;34m\]'
NORMAL='\[\033[00m\]'
PS1="${BLUE}(${RED}\w${BLUE}) ${NORMAL}\u@\h \n ${RED}\$ ${NORMAL}"

# --- Paths ---
if [ -e ~/dotfiles/scripts/ ]
then
  export PATH=$PATH:~/dotfiles/scripts
fi

# --- Aliases ---
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias rm='rm -i'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias ack='ack-grep'

alias meminfo='free -m -l -t'
alias psmem='ps auxf | sort -nr -k 4'
alias psmem10='ps auxf | sort -nr -k 4 | head -10'
alias pscpu='ps auxf | sort -nr -k 3'
alias pscpu10='ps auxf | sort -nr -k 3 | head -10'
alias cpuinfo='lscpu'
alias gpumeminfo='grep -i --color memory /var/log/Xorg.0.log'

# --- Useful Functions ---
function projector-clone() {
    vga=`xrandr -q | grep -o VGA.`
    lvds=`xrandr -q | grep -o LVDS.`
    res="1024x768"
    echo "Setting projector -> $vga, local -> $lvds, res = 1024 x 768"
    xrandr --output $vga --mode $res --same-as $lvds --output $lvds --mode $res
}

function projector-off() {
    vga=`xrandr -q | grep -o VGA.`
    lvds=`xrandr -q | grep -o LVDS.`
    echo "Closing projector -> $vga, local -> $lvds"
    xrandr --output $vga --off
    xrandr --output $lvds --auto
}

function display-dual-left-of() {
    xrandr --auto --output $1 --left-of $2
}

# display disk usage in human readable format, largest file first
function mydu() {
    echo "Checking disk usage. This may take a while..."
    du --max-depth 1 -h -a | sort -h
}

function __countFiles() {
    while read -r dir; do files=`find "$dir" | wc -l`; echo "$files $dir"; done
}

# display file usage by directory in human readable format, largest file first
function myfu() {
    echo "Checking file usage. This may take a while..."
    find -maxdepth 1 -type d | __countFiles | sort -h -r
}

# Lists top 10 commands used. Not sure how well this works with ignoredup set...
# http://stackoverflow.com/questions/68372/what-is-your-single-most-favorite-command-line-trick-using-bash
function top-ten() {
  history | awk '{print $2}' | awk 'BEGIN {FS="|"}{print $1}' | sort | uniq -c | sort -nr | head
}

# Mkdir and cd to it
function mkd() {
  d=$1
  mkdir ${d} && cd ${d}
}


###### CPP ######
function cmkr() {
  cmake -DCMAKE_BUILD_TYPE=Release ..
}

function cmkd() {
  cmake -DCMAKE_BUILD_TYPE=Debug ..
}

function cmkb() {
  rm -rf build && mkd build && cmkr
}

function cmkcb() {
  .. && cmkb
}

###### Git ######
function gpall() {
  msg=$1
  git commit -am "${msg}" && git push
}

function gst() {
  git status
}

function gdi() {
  git diff
}

function gco() {
  git checkout $@
}

function gundo() {
  git reset --soft HEAD~
}

function gamend() {
  git commit --amend -m "$1"
}

function guntracked() {
  git ls-files --others --exclude-standard
}

###### Py ######
function py_mkenv() {
  python3 -m venv .env/
  chmod +x .env/bin/activate
}

